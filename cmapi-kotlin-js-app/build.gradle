import com.google.javascript.jscomp.CompilerOptions

apply plugin: 'kotlin2js'
apply plugin: 'kotlin-dce-js'
apply plugin: "com.eriwen.gradle.js"
apply plugin: 'org.jetbrains.kotlin.frontend'

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    maven { url "http://dl.bintray.com/kotlin/kotlin-eap" }
    maven {
        url 'http://dl.bintray.com/kotlin/kotlin-eap-1.2'
    }
//    maven { url "http://dl.bintray.com/kotlin/kotlinx.html" }
    maven { url "http://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/squash" }
}

dependencies {
    compile project(':cmapi-kotlin-js')
//    compile libraries.kotlin_stdlib_js
//    compile("org.jetbrains.kotlinx:kotlinx-html-js:$html_version")
}

[compileKotlin2Js, compileTestKotlin2Js]*.configure {
    kotlinOptions.moduleKind = "umd"
}

compileKotlin2Js {
    kotlinOptions.sourceMap = true
    kotlinOptions.sourceMapEmbedSources = "always"
}

project.afterEvaluate {
    unpackDependenciesKotlinJs.dependsOn(':cmapi-kotlin-js:assemble')
    unpackDependenciesTestKotlinJs.dependsOn(':cmapi-kotlin-js:assemble')
}

combineJs {
    source = [
            // The order is important. That's why the documented way with a reference to a source set using wildcards
            // is not used.
            "${buildDir}/classes/kotlin/main/dependencies/kotlin.js",
            "${buildDir}/classes/kotlin/main/dependencies/cmapi-kotlin-js.js",
//            "${buildDir}/classes/kotlin/main/dependencies/campi-kotlin-js-app.js"
    ]
    dest = file("${buildDir}/classes/kotlin/main/combined/${archivesBaseName}-combined.js")
}

kotlinFrontend {
// uncomment this to specify exact nodejs version (bundle will be downloaded)
//    downloadNodeJsVersion = "8.7.0"

    sourceMaps = false

    npm {
        replaceVersion("kotlinx-html-js", "1.1.0")
        replaceVersion("kotlinx-html-shared", "1.1.0")
        replaceVersion("kotlin-js-library", "1.1.0")

//        dependency("leaflet")
    }

    webpackBundle {
        bundleName = "cmapi-kotlin-js"
        publicPath = "/"
        port = 8080
        proxyUrl = ""
    }
}

minifyJs {
    source = combineJs
    dest = file("${buildDir}/classes/kotlin/main/minified/${archivesBaseName}-minified.js")
    closure {
        compilerOptions = new CompilerOptions().with {
            setLanguage(CompilerOptions.LanguageMode.ECMASCRIPT5)
            return it
        }
    }
}

combineJs.dependsOn runDceKotlinJs
build.dependsOn minifyJs

task minifiedJar(type: Jar) {
    classifier = 'minified'
    from minifyJs
}

artifacts {
    archives minifiedJar
}
