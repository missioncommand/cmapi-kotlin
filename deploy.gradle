apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def artifact = new Properties()
artifact.load(new FileInputStream("deploy.settings"))

version=release_version
group=artifact.groupId

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'jar'
            groupId artifact.groupId
            artifactId artifact.id
            version artifact.version
            name artifact.id // pom.project.name must be same as bintray.pkg.name
            url artifact.siteUrl
            licenses {
                license { // HARDCODED
                    name 'Apache-2.0'
                    distribution 'repo'
                }
            }
            scm {
                connection artifact.gitUrl
                developerConnection artifact.gitUrl
            }
        }
    }
}

Properties properties = new Properties()
File propFile = "${System.getProperty("user.dir")}${File.separator}.gradle${File.separator}bintray.properties" as File
properties.load(propFile.newDataInputStream())

allprojects{

    apply plugin: 'idea'
    apply plugin: 'com.jfrog.bintray'

    bintray {
        user = properties.getProperty("bintray.user")
        key = properties.getProperty("bintray.apikey")

        configurations = ['archives']
        pkg {
            repo = "cmapi-kotlin"
            name ="cmapi-kotlin-release"
            websiteUrl = artifact.siteUrl
            userOrg="rgi"
            vcsUrl = artifact.gitUrl
            licenses = artifact.licenses
            publish = true
            version {
                name = artifact.version
            }
        }
    }

}


subprojects {
    apply plugin: 'maven'

    if (project.plugins.hasPlugin('java')) {
        configurations {
            published
        }
        dependencies {
            testCompile 'junit:junit:4.7'
        }

        task sourceJar(type: Jar) {
            from sourceSets.main.allSource
            classifier = 'sources'
        }
        task javadocJar(type: Jar, dependsOn: javadoc) {
            classifier = 'javadoc'
            from javadoc.destinationDir
        }

        // Add the sourceJars to non-extractor modules
        artifacts {
            published sourceJar
            published javadocJar
        }
    }
}



dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //TODO include jvm jar and js
}